{"ast":null,"code":"import { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from 'react';\nimport axios from 'axios';\nimport { fetchAnsweredMsg, fetchNonAnsweredMsg } from '../store/actions/telegram';\nimport { Modal, ModalHeader, ModalBody } from 'reactstrap';\nimport { connect } from 'react-redux';\nimport MessageDetail from '../components/shared/messageDetailed';\nimport { helloUser } from '../defaults/hello';\nimport Header from '../components/admin/Header';\nimport Footer from '../components/admin/Footer';\nimport disableScroll from 'disable-scroll';\nimport cookie from 'js-cookie';\n\nconst mapStateToProps = state => {\n  return {\n    nonanswered: state.nonanswered,\n    answered: state.answered\n  };\n};\n\nconst mapDispatchToProps = dispatch => ({\n  fetchAnsweredMsg: () => dispatch(fetchAnsweredMsg()),\n  fetchNonAnsweredMsg: () => dispatch(fetchNonAnsweredMsg())\n});\n\nclass Telegram extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      collapse: \"\",\n      message: '',\n      answer: '',\n      code: '',\n      loading: false,\n      answers: true\n    });\n\n    _defineProperty(this, \"handleSubmit\", (msgid, question, iin, id) => {\n      const groupText = `\nОтветили на вопрос: ${question}%0A \nИИН: ${iin}%0A%0A\n${helloUser()}!%0A\n${this.state.answer.split('%0A')}%0A%0A\nС уважением I-credit.kz%0A%0A\n   #ответили `;\n      const errorMessage = `Не удалось отправить ответ. Пользователь блокировал наш телеграм бот-> ИИН: ${iin}%0A%0A;Вопрос: ${question}%0A #ошибка`;\n      const answerText = `\n${helloUser()}!%0A\n${this.state.answer.split('%0A')}%0A%0A\nС уважением I-credit.kz\n    `;\n\n      if (this.state.answer) {\n        // console.log(this.state.answer.length)\n        this.setState({\n          loading: true\n        });\n        axios.post(`https://api.telegram.org/bot1464143689:AAHakxNTvvBG9qpzrH8Z-lNNyEjAS2aW8-U/sendMessage?chat_id=${msgid}&text=${answerText}&ie=UTF-8&oe=UTF-8&parse_mode=html`).then(response => {\n          if (response.data.ok) {\n            axios.put(`https://api.money-men.kz/api/telegram/${id}`).then(response => {\n              if (response.data.success) {\n                axios.post(`https://api.telegram.org/bot1464143689:AAHakxNTvvBG9qpzrH8Z-lNNyEjAS2aW8-U/sendMessage?chat_id=-438259555&text=${groupText}&ie=UTF-8&oe=UTF-8&parse_mode=html`);\n                this.setState({\n                  loading: false\n                });\n                this.setState({\n                  message: 'Отправлено',\n                  collapse: '',\n                  answer: ''\n                });\n                setTimeout(() => {\n                  this.setState({\n                    message: ''\n                  });\n                }, 1500);\n                this.props.fetchNonAnsweredMsg();\n                this.props.fetchAnsweredMsg();\n              }\n            });\n          } else {\n            this.setState({\n              message: 'Не отправлено'\n            });\n            setTimeout(() => {\n              this.setState({\n                message: '',\n                collapse: '',\n                answer: ''\n              });\n            }, 1500);\n          }\n        }).catch(function (error) {\n          if (error.response) {\n            axios.put(`https://api.money-men.kz/api/telegram/${id}`).then(response => {\n              axios.post(`https://api.telegram.org/bot1464143689:AAHakxNTvvBG9qpzrH8Z-lNNyEjAS2aW8-U/sendMessage?chat_id=-438259555&text=${errorMessage}&ie=UTF-8&oe=UTF-8&parse_mode=html`).then(res => {\n                location.reload();\n              });\n            });\n          }\n        });\n      }\n    });\n\n    _defineProperty(this, \"handleChange\", event => {\n      // const value = event.target.value.replace(/[\\r\\n\\v]+/g, \"\");\n      this.setState({\n        answer: event.target.value\n      });\n    });\n\n    _defineProperty(this, \"handleCode\", event => {\n      this.setState({\n        code: event.target.value\n      });\n    });\n\n    _defineProperty(this, \"handleRecommend\", e => {\n      this.setState({\n        answer: e.target.value\n      });\n    });\n\n    _defineProperty(this, \"submitCode\", () => {\n      if (this.state.code === 'admin123') {\n        cookie.set('botmsg', '3917', {\n          expires: 60\n        });\n        location.reload();\n      } else {\n        alert('Ошибка кода');\n      }\n    });\n\n    _defineProperty(this, \"toggleCollapse\", id => () => {\n      if (!this.state.collapse || id !== this.state.collapse) {\n        this.setState({\n          collapse: id\n        });\n      } else if (this.state.collapse === id) {\n        this.setState({\n          collapse: false\n        });\n      }\n    });\n\n    _defineProperty(this, \"handleAnswered\", () => {\n      this.setState(prev => ({\n        answers: !prev.answers\n      }));\n    });\n  }\n\n  componentDidMount() {\n    this.props.fetchNonAnsweredMsg();\n    this.props.fetchAnsweredMsg();\n  }\n\n  keypress(event, msgid, question, iin, id) {\n    if (event.keyCode == 13 && event.shiftKey) {\n      this.handleSubmit(msgid, question, iin, id);\n    }\n  }\n\n  render() {\n    // if (this.props.nonanswered.nonanswered.length === 0 && this.props.nonanswered.isLoading=== false) {\n    //     return (<div className='mb-5 container otherPages'>\n    //          {this.state.answers ?  <button active className='btn btn-dark mb-3' onClick={() => this.handleAnswered()}>Получить неотвеченные</button> \n    //         :   <button active className='btn btn-dark mb-3 mr-3' onClick={() => this.handleAnswered()}>Получить отвеченные</button>}\n    //         <h4 className='mb-3 text-center'>Неотвеченные вопросы</h4>\n    //         <p className='text-center'>Нет вопросов</p>\n    //     </div>)\n    // }\n    if (this.props.nonanswered.isLoading) {\n      return /*#__PURE__*/_jsxs(_Fragment, {\n        children: [/*#__PURE__*/_jsx(Header, {}), /*#__PURE__*/_jsx(\"div\", {\n          className: \"container  otherPages text-center\",\n          children: \"\\u0417\\u0430\\u0433\\u0440\\u0443\\u0437\\u043A\\u0430.......\"\n        }), /*#__PURE__*/_jsx(Footer, {})]\n      });\n    }\n\n    if (!this.state.answers && !this.props.answered.isLoading) {\n      return /*#__PURE__*/_jsxs(_Fragment, {\n        children: [/*#__PURE__*/_jsx(Header, {}), /*#__PURE__*/_jsx(\"main\", {\n          role: \"main\",\n          children: /*#__PURE__*/_jsx(\"section\", {\n            class: \"panel important\",\n            children: /*#__PURE__*/_jsxs(\"div\", {\n              className: \"container otherPages\",\n              children: [this.state.answers ? /*#__PURE__*/_jsx(\"button\", {\n                active: true,\n                className: \"btn btn-dark mb-3\",\n                onClick: () => this.handleAnswered(),\n                children: \"\\u041F\\u043E\\u043B\\u0443\\u0447\\u0438\\u0442\\u044C \\u043E\\u0442\\u0432\\u0435\\u0447\\u0435\\u043D\\u043D\\u044B\\u0435\"\n              }) : /*#__PURE__*/_jsx(\"button\", {\n                active: true,\n                className: \"btn btn-dark mb-3 mr-3\",\n                onClick: () => this.handleAnswered(),\n                children: \"\\u041F\\u043E\\u043B\\u0443\\u0447\\u0438\\u0442\\u044C \\u043D\\u0435\\u043E\\u0442\\u0432\\u0435\\u0447\\u0435\\u043D\\u043D\\u044B\\u0435\"\n              }), this.state.message.length > 0 ? /*#__PURE__*/_jsx(\"div\", {\n                className: \"tlgmsg alert alert-info\",\n                children: this.state.message\n              }) : /*#__PURE__*/_jsx(\"div\", {}), /*#__PURE__*/_jsxs(\"h4\", {\n                className: \"mb-3 text-center\",\n                children: [\"\\u041E\\u0442\\u0432\\u0435\\u0447\\u0435\\u043D\\u043D\\u044B\\u0435 \\u0432\\u043E\\u043F\\u0440\\u043E\\u0441\\u044B \\u0437\\u0430 \\u043D\\u0435\\u0434\\u0435\\u043B\\u044E (\", this.props.answered.answered.length, \")\"]\n              }), /*#__PURE__*/_jsx(\"div\", {\n                className: \"row\",\n                children: this.props.answered.answered.map(elem => /*#__PURE__*/_jsx(\"div\", {\n                  className: \"col-md-4\",\n                  children: /*#__PURE__*/_jsx(\"div\", {\n                    className: \"card mt-2 answeredCard\",\n                    children: /*#__PURE__*/_jsxs(\"div\", {\n                      className: \"card-body\",\n                      children: [/*#__PURE__*/_jsxs(\"p\", {\n                        className: \"tinydate\",\n                        children: [\"\\u0417\\u0430\\u0434\\u0430\\u043D\\u043E: \", new Intl.DateTimeFormat('ru', {\n                          year: 'numeric',\n                          month: 'short',\n                          day: '2-digit',\n                          hour: 'numeric',\n                          minute: 'numeric'\n                        }).format(new Date(Date.parse(elem.created_at)))]\n                      }), /*#__PURE__*/_jsxs(\"p\", {\n                        className: \"tinydate\",\n                        children: [\"\\u041E\\u0442\\u0432\\u0435\\u0447\\u0435\\u043D\\u043E: \", new Intl.DateTimeFormat('ru', {\n                          year: 'numeric',\n                          month: 'short',\n                          day: '2-digit',\n                          hour: 'numeric',\n                          minute: 'numeric'\n                        }).format(new Date(Date.parse(elem.updated_at)))]\n                      }), /*#__PURE__*/_jsxs(\"p\", {\n                        className: \"card-text\",\n                        children: [\"\\u0418\\u043C\\u044F: \", elem.name, \" \", /*#__PURE__*/_jsx(\"br\", {}), \"\\u0418\\u0418\\u041D: \", elem.iin]\n                      }), /*#__PURE__*/_jsxs(\"i\", {\n                        children: [\"\\u0412\\u043E\\u043F\\u0440\\u043E\\u0441: \", elem.question]\n                      })]\n                    })\n                  }, elem.id)\n                }))\n              })]\n            })\n          })\n        }), /*#__PURE__*/_jsx(Footer, {})]\n      });\n    } else return /*#__PURE__*/_jsxs(_Fragment, {\n      children: [/*#__PURE__*/_jsx(Header, {}), /*#__PURE__*/_jsx(\"main\", {\n        role: \"main\",\n        children: /*#__PURE__*/_jsx(\"section\", {\n          class: \"panel important\",\n          children: /*#__PURE__*/_jsxs(\"div\", {\n            className: \"container otherPages\",\n            children: [this.state.answers ? /*#__PURE__*/_jsx(\"button\", {\n              active: true,\n              className: \"btn btn-dark mb-3\",\n              onClick: () => this.handleAnswered(),\n              children: \"\\u041F\\u043E\\u043B\\u0443\\u0447\\u0438\\u0442\\u044C \\u043E\\u0442\\u0432\\u0435\\u0447\\u0435\\u043D\\u043D\\u044B\\u0435\"\n            }) : /*#__PURE__*/_jsx(\"button\", {\n              active: true,\n              className: \"btn btn-dark mb-3 mr-3\",\n              onClick: () => this.handleAnswered(),\n              children: \"\\u041F\\u043E\\u043B\\u0443\\u0447\\u0438\\u0442\\u044C \\u043D\\u0435\\u043E\\u0442\\u0432\\u0435\\u0447\\u0435\\u043D\\u043D\\u044B\\u0435\"\n            }), this.state.message.length > 0 ? /*#__PURE__*/_jsx(\"div\", {\n              className: \"tlgmsg alert alert-info\",\n              children: this.state.message\n            }) : /*#__PURE__*/_jsx(\"div\", {}), /*#__PURE__*/_jsxs(\"h4\", {\n              className: \"mb-3 text-center\",\n              children: [\"\\u041D\\u0435\\u043E\\u0442\\u0432\\u0435\\u0447\\u0435\\u043D\\u043D\\u044B\\u0435 \\u0432\\u043E\\u043F\\u0440\\u043E\\u0441\\u044B (\", this.props.nonanswered.nonanswered.length, \")\"]\n            }), /*#__PURE__*/_jsx(\"div\", {\n              className: \"row\",\n              children: this.props.nonanswered.nonanswered.map(elem => /*#__PURE__*/_jsx(\"div\", {\n                className: \"col-md-4\",\n                children: /*#__PURE__*/_jsx(\"div\", {\n                  className: \"card mt-2\",\n                  onClick: this.toggleCollapse(elem.id),\n                  children: /*#__PURE__*/_jsxs(\"div\", {\n                    className: \"card-body\",\n                    children: [/*#__PURE__*/_jsx(\"p\", {\n                      className: \"tinydate\",\n                      children: new Intl.DateTimeFormat('ru', {\n                        year: 'numeric',\n                        month: 'short',\n                        day: '2-digit',\n                        hour: 'numeric',\n                        minute: 'numeric'\n                      }).format(new Date(Date.parse(elem.created_at)))\n                    }), /*#__PURE__*/_jsxs(\"p\", {\n                      className: \"card-text\",\n                      children: [\"\\u0418\\u043C\\u044F: \", elem.name, \" \", /*#__PURE__*/_jsx(\"br\", {}), \"\\u0418\\u0418\\u041D: \", elem.iin]\n                    }), /*#__PURE__*/_jsxs(\"i\", {\n                      children: [\"\\u0412\\u043E\\u043F\\u0440\\u043E\\u0441: \", elem.question]\n                    })]\n                  })\n                }, elem.id)\n              }))\n            }), /*#__PURE__*/_jsx(Modal, {\n              isOpen: this.state.collapse,\n              toggle: this.toggleCollapse(this.state.collapse),\n              size: \"lg\",\n              children: /*#__PURE__*/_jsx(ModalBody, {\n                children: /*#__PURE__*/_jsx(MessageDetail, {\n                  msg: this.props.nonanswered.nonanswered.filter(el => el.id === parseInt(this.state.collapse))[0],\n                  answer: this.state.answer,\n                  handleChange: this.handleChange,\n                  handleSubmit: this.handleSubmit,\n                  handleRecommend: this.handleRecommend,\n                  keypress: this.keypress,\n                  loading: this.state.loading\n                })\n              })\n            })]\n          })\n        })\n      }), /*#__PURE__*/_jsx(Footer, {})]\n    });\n  }\n\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Telegram);","map":null,"metadata":{},"sourceType":"module"}