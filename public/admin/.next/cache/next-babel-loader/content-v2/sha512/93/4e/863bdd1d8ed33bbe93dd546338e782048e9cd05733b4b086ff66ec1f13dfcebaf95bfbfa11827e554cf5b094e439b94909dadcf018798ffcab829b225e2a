{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"E:\\\\icredit\\\\frontend-admin\\\\pages\\\\telegram.js\";\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from 'react';\nimport axios from 'axios';\nimport { fetchAnsweredMsg, fetchNonAnsweredMsg } from '../store/actions/telegram';\nimport { Modal, ModalHeader, ModalBody } from 'reactstrap';\nimport { connect } from 'react-redux';\nimport MessageDetail from '../components/shared/messageDetailed';\nimport { helloUser } from '../defaults/hello';\nimport Header from '../components/admin/Header';\nimport Footer from '../components/admin/Footer';\nimport disableScroll from 'disable-scroll';\nimport cookie from 'js-cookie';\n\nconst mapStateToProps = state => {\n  return {\n    nonanswered: state.nonanswered,\n    answered: state.answered\n  };\n};\n\nconst mapDispatchToProps = dispatch => ({\n  fetchAnsweredMsg: () => dispatch(fetchAnsweredMsg()),\n  fetchNonAnsweredMsg: () => dispatch(fetchNonAnsweredMsg())\n});\n\nclass Telegram extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      collapse: \"\",\n      message: '',\n      answer: '',\n      code: '',\n      loading: false,\n      answers: true\n    });\n\n    _defineProperty(this, \"handleSubmit\", (msgid, question, iin, id) => {\n      const groupText = `\nОтветили на вопрос: ${question}%0A \nИИН: ${iin}%0A%0A\n${helloUser()}!%0A\n${this.state.answer.split('%0A')}%0A%0A\nС уважением I-credit.kz%0A%0A\n   #ответили `;\n      const errorMessage = `Не удалось отправить ответ. Пользователь блокировал наш телеграм бот-> ИИН: ${iin}%0A%0A;Вопрос: ${question}%0A #ошибка`;\n      const answerText = `\n${helloUser()}!%0A\n${this.state.answer.split('%0A')}%0A%0A\nС уважением I-credit.kz\n    `;\n\n      if (this.state.answer) {\n        // console.log(this.state.answer.length)\n        this.setState({\n          loading: true\n        });\n        axios.post(`https://api.telegram.org/bot1464143689:AAHakxNTvvBG9qpzrH8Z-lNNyEjAS2aW8-U/sendMessage?chat_id=${msgid}&text=${answerText}&ie=UTF-8&oe=UTF-8&parse_mode=html`).then(response => {\n          if (response.data.ok) {\n            axios.put(`https://api.money-men.kz/api/telegram/${id}`).then(response => {\n              if (response.data.success) {\n                axios.post(`https://api.telegram.org/bot1464143689:AAHakxNTvvBG9qpzrH8Z-lNNyEjAS2aW8-U/sendMessage?chat_id=-438259555&text=${groupText}&ie=UTF-8&oe=UTF-8&parse_mode=html`);\n                this.setState({\n                  loading: false\n                });\n                this.setState({\n                  message: 'Отправлено',\n                  collapse: '',\n                  answer: ''\n                });\n                setTimeout(() => {\n                  this.setState({\n                    message: ''\n                  });\n                }, 1500);\n                this.props.fetchNonAnsweredMsg();\n                this.props.fetchAnsweredMsg();\n              }\n            });\n          } else {\n            this.setState({\n              message: 'Не отправлено'\n            });\n            setTimeout(() => {\n              this.setState({\n                message: '',\n                collapse: '',\n                answer: ''\n              });\n            }, 1500);\n          }\n        }).catch(function (error) {\n          if (error.response) {\n            axios.put(`https://api.money-men.kz/api/telegram/${id}`).then(response => {\n              axios.post(`https://api.telegram.org/bot1464143689:AAHakxNTvvBG9qpzrH8Z-lNNyEjAS2aW8-U/sendMessage?chat_id=-438259555&text=${errorMessage}&ie=UTF-8&oe=UTF-8&parse_mode=html`).then(res => {\n                location.reload();\n              });\n            });\n          }\n        });\n      }\n    });\n\n    _defineProperty(this, \"handleChange\", event => {\n      // const value = event.target.value.replace(/[\\r\\n\\v]+/g, \"\");\n      this.setState({\n        answer: event.target.value\n      });\n    });\n\n    _defineProperty(this, \"handleCode\", event => {\n      this.setState({\n        code: event.target.value\n      });\n    });\n\n    _defineProperty(this, \"handleRecommend\", e => {\n      this.setState({\n        answer: e.target.value\n      });\n    });\n\n    _defineProperty(this, \"submitCode\", () => {\n      if (this.state.code === 'admin123') {\n        cookie.set('botmsg', '3917', {\n          expires: 60\n        });\n        location.reload();\n      } else {\n        alert('Ошибка кода');\n      }\n    });\n\n    _defineProperty(this, \"toggleCollapse\", id => () => {\n      if (!this.state.collapse || id !== this.state.collapse) {\n        this.setState({\n          collapse: id\n        });\n      } else if (this.state.collapse === id) {\n        this.setState({\n          collapse: false\n        });\n      }\n    });\n\n    _defineProperty(this, \"handleAnswered\", () => {\n      this.setState(prev => ({\n        answers: !prev.answers\n      }));\n    });\n  }\n\n  componentDidMount() {\n    this.props.fetchNonAnsweredMsg();\n    this.props.fetchAnsweredMsg();\n  }\n\n  keypress(event, msgid, question, iin, id) {\n    if (event.keyCode == 13 && event.shiftKey) {\n      this.handleSubmit(msgid, question, iin, id);\n    }\n  }\n\n  render() {\n    // if (this.props.nonanswered.nonanswered.length === 0 && this.props.nonanswered.isLoading=== false) {\n    //     return (<div className='mb-5 container otherPages'>\n    //          {this.state.answers ?  <button active className='btn btn-dark mb-3' onClick={() => this.handleAnswered()}>Получить неотвеченные</button> \n    //         :   <button active className='btn btn-dark mb-3 mr-3' onClick={() => this.handleAnswered()}>Получить отвеченные</button>}\n    //         <h4 className='mb-3 text-center'>Неотвеченные вопросы</h4>\n    //         <p className='text-center'>Нет вопросов</p>\n    //     </div>)\n    // }\n    if (this.props.nonanswered.isLoading) {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"container  otherPages text-center\",\n          children: \"\\u0417\\u0430\\u0433\\u0440\\u0443\\u0437\\u043A\\u0430.......\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true);\n    }\n\n    if (!this.state.answers && !this.props.answered.isLoading) {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n          role: \"main\",\n          children: /*#__PURE__*/_jsxDEV(\"section\", {\n            class: \"panel important\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"container otherPages\",\n              children: [this.state.answers ? /*#__PURE__*/_jsxDEV(\"button\", {\n                active: true,\n                className: \"btn btn-dark mb-3\",\n                onClick: () => this.handleAnswered(),\n                children: \"\\u041F\\u043E\\u043B\\u0443\\u0447\\u0438\\u0442\\u044C \\u043E\\u0442\\u0432\\u0435\\u0447\\u0435\\u043D\\u043D\\u044B\\u0435\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 165,\n                columnNumber: 40\n              }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n                active: true,\n                className: \"btn btn-dark mb-3 mr-3\",\n                onClick: () => this.handleAnswered(),\n                children: \"\\u041F\\u043E\\u043B\\u0443\\u0447\\u0438\\u0442\\u044C \\u043D\\u0435\\u043E\\u0442\\u0432\\u0435\\u0447\\u0435\\u043D\\u043D\\u044B\\u0435\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 167,\n                columnNumber: 21\n              }, this), this.state.message.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"tlgmsg alert alert-info\",\n                children: this.state.message\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 168,\n                columnNumber: 48\n              }, this) : /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 168,\n                columnNumber: 117\n              }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n                className: \"mb-3 text-center\",\n                children: [\"\\u041E\\u0442\\u0432\\u0435\\u0447\\u0435\\u043D\\u043D\\u044B\\u0435 \\u0432\\u043E\\u043F\\u0440\\u043E\\u0441\\u044B \\u0437\\u0430 \\u043D\\u0435\\u0434\\u0435\\u043B\\u044E (\", this.props.answered.answered.length, \")\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 169,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"row\",\n                children: this.props.answered.answered.map(elem => /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"col-md-4\",\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"card mt-2 answeredCard\",\n                    children: /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"card-body\",\n                      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                        className: \"tinydate\",\n                        children: [\"\\u0417\\u0430\\u0434\\u0430\\u043D\\u043E: \", new Intl.DateTimeFormat('ru', {\n                          year: 'numeric',\n                          month: 'short',\n                          day: '2-digit',\n                          hour: 'numeric',\n                          minute: 'numeric'\n                        }).format(new Date(Date.parse(elem.created_at)))]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 175,\n                        columnNumber: 29\n                      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                        className: \"tinydate\",\n                        children: [\"\\u041E\\u0442\\u0432\\u0435\\u0447\\u0435\\u043D\\u043E: \", new Intl.DateTimeFormat('ru', {\n                          year: 'numeric',\n                          month: 'short',\n                          day: '2-digit',\n                          hour: 'numeric',\n                          minute: 'numeric'\n                        }).format(new Date(Date.parse(elem.updated_at)))]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 176,\n                        columnNumber: 29\n                      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                        className: \"card-text\",\n                        children: [\"\\u0418\\u043C\\u044F: \", elem.name, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 178,\n                          columnNumber: 54\n                        }, this), \"\\u0418\\u0418\\u041D: \", elem.iin]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 177,\n                        columnNumber: 33\n                      }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n                        children: [\"\\u0412\\u043E\\u043F\\u0440\\u043E\\u0441: \", elem.question]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 180,\n                        columnNumber: 33\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 174,\n                      columnNumber: 29\n                    }, this)\n                  }, elem.id, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 173,\n                    columnNumber: 26\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 172,\n                  columnNumber: 22\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 170,\n                columnNumber: 16\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 164,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 6\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 14\n        }, this)]\n      }, void 0, true);\n    } else return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n        role: \"main\",\n        children: /*#__PURE__*/_jsxDEV(\"section\", {\n          class: \"panel important\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"container otherPages\",\n            children: [this.state.answers ? /*#__PURE__*/_jsxDEV(\"button\", {\n              active: true,\n              className: \"btn btn-dark mb-3\",\n              onClick: () => this.handleAnswered(),\n              children: \"\\u041F\\u043E\\u043B\\u0443\\u0447\\u0438\\u0442\\u044C \\u043E\\u0442\\u0432\\u0435\\u0447\\u0435\\u043D\\u043D\\u044B\\u0435\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 201,\n              columnNumber: 40\n            }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n              active: true,\n              className: \"btn btn-dark mb-3 mr-3\",\n              onClick: () => this.handleAnswered(),\n              children: \"\\u041F\\u043E\\u043B\\u0443\\u0447\\u0438\\u0442\\u044C \\u043D\\u0435\\u043E\\u0442\\u0432\\u0435\\u0447\\u0435\\u043D\\u043D\\u044B\\u0435\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 203,\n              columnNumber: 21\n            }, this), this.state.message.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"tlgmsg alert alert-info\",\n              children: this.state.message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 206,\n              columnNumber: 48\n            }, this) : /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 206,\n              columnNumber: 117\n            }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n              className: \"mb-3 text-center\",\n              children: [\"\\u041D\\u0435\\u043E\\u0442\\u0432\\u0435\\u0447\\u0435\\u043D\\u043D\\u044B\\u0435 \\u0432\\u043E\\u043F\\u0440\\u043E\\u0441\\u044B (\", this.props.nonanswered.nonanswered.length, \")\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 207,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"row\",\n              children: this.props.nonanswered.nonanswered.map(elem => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"col-md-4\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"card mt-2\",\n                  onClick: this.toggleCollapse(elem.id),\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"card-body\",\n                    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                      className: \"tinydate\",\n                      children: new Intl.DateTimeFormat('ru', {\n                        year: 'numeric',\n                        month: 'short',\n                        day: '2-digit',\n                        hour: 'numeric',\n                        minute: 'numeric'\n                      }).format(new Date(Date.parse(elem.created_at)))\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 213,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                      className: \"card-text\",\n                      children: [\"\\u0418\\u043C\\u044F: \", elem.name, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 215,\n                        columnNumber: 54\n                      }, this), \"\\u0418\\u0418\\u041D: \", elem.iin]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 214,\n                      columnNumber: 33\n                    }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n                      children: [\"\\u0412\\u043E\\u043F\\u0440\\u043E\\u0441: \", elem.question]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 217,\n                      columnNumber: 33\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 212,\n                    columnNumber: 29\n                  }, this)\n                }, elem.id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 211,\n                  columnNumber: 26\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 210,\n                columnNumber: 22\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 208,\n              columnNumber: 14\n            }, this), /*#__PURE__*/_jsxDEV(Modal, {\n              isOpen: this.state.collapse,\n              toggle: this.toggleCollapse(this.state.collapse),\n              size: \"lg\",\n              children: /*#__PURE__*/_jsxDEV(ModalBody, {\n                children: /*#__PURE__*/_jsxDEV(MessageDetail, {\n                  msg: this.props.nonanswered.nonanswered.filter(el => el.id === parseInt(this.state.collapse))[0],\n                  answer: this.state.answer,\n                  handleChange: this.handleChange,\n                  handleSubmit: this.handleSubmit,\n                  handleRecommend: this.handleRecommend,\n                  keypress: this.keypress,\n                  loading: this.state.loading\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 227,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 226,\n                columnNumber: 18\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 225,\n              columnNumber: 14\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true);\n  }\n\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Telegram);","map":{"version":3,"sources":["E:/icredit/frontend-admin/pages/telegram.js"],"names":["React","axios","fetchAnsweredMsg","fetchNonAnsweredMsg","Modal","ModalHeader","ModalBody","connect","MessageDetail","helloUser","Header","Footer","disableScroll","cookie","mapStateToProps","state","nonanswered","answered","mapDispatchToProps","dispatch","Telegram","Component","collapse","message","answer","code","loading","answers","msgid","question","iin","id","groupText","split","errorMessage","answerText","setState","post","then","response","data","ok","put","success","setTimeout","props","catch","error","res","location","reload","event","target","value","e","set","expires","alert","prev","componentDidMount","keypress","keyCode","shiftKey","handleSubmit","render","isLoading","handleAnswered","length","map","elem","Intl","DateTimeFormat","year","month","day","hour","minute","format","Date","parse","created_at","updated_at","name","toggleCollapse","filter","el","parseInt","handleChange","handleRecommend"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport axios from 'axios';\r\nimport {fetchAnsweredMsg, fetchNonAnsweredMsg} from '../store/actions/telegram'\r\nimport { Modal, ModalHeader, ModalBody } from 'reactstrap';\r\nimport {connect} from 'react-redux'\r\nimport MessageDetail from '../components/shared/messageDetailed'\r\nimport {helloUser} from '../defaults/hello'\r\nimport Header from '../components/admin/Header'\r\nimport Footer from '../components/admin/Footer'\r\nimport disableScroll from 'disable-scroll';\r\nimport cookie from 'js-cookie'\r\nconst mapStateToProps = state => {\r\n  return {nonanswered: state.nonanswered, answered: state.answered}\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  fetchAnsweredMsg: () => dispatch(fetchAnsweredMsg()),\r\n  fetchNonAnsweredMsg: () => dispatch(fetchNonAnsweredMsg()),\r\n})\r\n\r\n\r\nclass Telegram extends React.Component {\r\n\r\n  componentDidMount() {\r\n    this.props.fetchNonAnsweredMsg();\r\n    this.props.fetchAnsweredMsg();\r\n  }\r\n\r\n  state = {\r\n    collapse: \"\",\r\n    message: '',\r\n    answer: '',\r\n    code: '',\r\n    loading: false,\r\n    answers: true,\r\n  }\r\n  \r\n  handleSubmit = (msgid,question,iin, id) => {\r\n    const groupText = `\r\nОтветили на вопрос: ${question}%0A \r\nИИН: ${iin}%0A%0A\r\n${helloUser()}!%0A\r\n${this.state.answer.split('%0A')}%0A%0A\r\nС уважением I-credit.kz%0A%0A\r\n   #ответили `\r\n\r\n    const errorMessage =  `Не удалось отправить ответ. Пользователь блокировал наш телеграм бот-> ИИН: ${iin}%0A%0A;Вопрос: ${question}%0A #ошибка`\r\n    const answerText = `\r\n${helloUser()}!%0A\r\n${this.state.answer.split('%0A')}%0A%0A\r\nС уважением I-credit.kz\r\n    `\r\n        if(this.state.answer) {\r\n            // console.log(this.state.answer.length)\r\n            this.setState({loading: true})\r\n            axios.post(`https://api.telegram.org/bot1464143689:AAHakxNTvvBG9qpzrH8Z-lNNyEjAS2aW8-U/sendMessage?chat_id=${msgid}&text=${answerText}&ie=UTF-8&oe=UTF-8&parse_mode=html`)\r\n            .then(response=> {\r\n                if(response.data.ok) {\r\n                    axios.put(`https://api.money-men.kz/api/telegram/${id}`)\r\n                    .then(response=>{\r\n                        if(response.data.success) {\r\n                            axios.post(`https://api.telegram.org/bot1464143689:AAHakxNTvvBG9qpzrH8Z-lNNyEjAS2aW8-U/sendMessage?chat_id=-438259555&text=${groupText}&ie=UTF-8&oe=UTF-8&parse_mode=html`)\r\n                            this.setState({loading: false})\r\n                            this.setState({message: 'Отправлено',collapse: '', answer: ''})\r\n                            setTimeout(() => {\r\n                                this.setState({message: ''})\r\n                            },1500)\r\n                            this.props.fetchNonAnsweredMsg()\r\n                            this.props.fetchAnsweredMsg()\r\n                        }\r\n                    })\r\n                    \r\n                }else {\r\n                    this.setState({message: 'Не отправлено'})\r\n                    setTimeout(() => {\r\n                        this.setState({message: '', collapse: '', answer: ''})\r\n                    },1500)\r\n                }\r\n            })\r\n            .catch(function(error) {\r\n               if(error.response) {\r\n                   axios.put(`https://api.money-men.kz/api/telegram/${id}`)\r\n                   .then(response=> {\r\n                    axios.post(`https://api.telegram.org/bot1464143689:AAHakxNTvvBG9qpzrH8Z-lNNyEjAS2aW8-U/sendMessage?chat_id=-438259555&text=${errorMessage}&ie=UTF-8&oe=UTF-8&parse_mode=html`)\r\n                        .then(res=> {\r\n                            location.reload()\r\n                        })\r\n                   })\r\n                   \r\n               }\r\n            })\r\n        }\r\n    }\r\n\r\n    keypress(event, msgid,question,iin, id) {\r\n      if(event.keyCode == 13 && event.shiftKey){\r\n        this.handleSubmit(msgid,question,iin,id)\r\n      }\r\n    }\r\n\r\n    handleChange = (event) => {\r\n      // const value = event.target.value.replace(/[\\r\\n\\v]+/g, \"\");\r\n      this.setState({ answer: event.target.value });\r\n    }\r\n    handleCode = (event) => {\r\n      this.setState({code: event.target.value})\r\n    }\r\n\r\n    handleRecommend = e => {\r\n        this.setState({answer: e.target.value})\r\n    }\r\n    submitCode = () => {\r\n      if(this.state.code === 'admin123') {\r\n        cookie.set('botmsg','3917', {expires: 60})\r\n        location.reload();\r\n      }else {\r\n        alert('Ошибка кода')\r\n      }\r\n    }\r\n\r\n    toggleCollapse = id => () => {\r\n        if (!this.state.collapse || id !== this.state.collapse) {\r\n            this.setState({\r\n            collapse: id\r\n            });\r\n        } else if (this.state.collapse === id) {\r\n            this.setState({ collapse: false })\r\n        }\r\n    }\r\n\r\n    handleAnswered = () => {\r\n      this.setState(prev=>({\r\n          answers: !prev.answers\r\n      }))\r\n    }\r\n\r\n    render() {\r\n        // if (this.props.nonanswered.nonanswered.length === 0 && this.props.nonanswered.isLoading=== false) {\r\n        //     return (<div className='mb-5 container otherPages'>\r\n        //          {this.state.answers ?  <button active className='btn btn-dark mb-3' onClick={() => this.handleAnswered()}>Получить неотвеченные</button> \r\n                \r\n        //         :   <button active className='btn btn-dark mb-3 mr-3' onClick={() => this.handleAnswered()}>Получить отвеченные</button>}\r\n        //         <h4 className='mb-3 text-center'>Неотвеченные вопросы</h4>\r\n        //         <p className='text-center'>Нет вопросов</p>\r\n        //     </div>)\r\n        // }\r\n        if(this.props.nonanswered.isLoading) {\r\n            return (\r\n                <>\r\n                <Header/>\r\n                <div className='container  otherPages text-center'>\r\n                    Загрузка.......\r\n                </div>\r\n                <Footer/>\r\n                </>\r\n            )\r\n        }\r\n        if(!this.state.answers && !this.props.answered.isLoading) {\r\n            return (\r\n                <>\r\n                <Header/>\r\n                <main role=\"main\">\r\n     <section class=\"panel important\">\r\n              <div className='container otherPages'>\r\n                {this.state.answers ?  <button active className='btn btn-dark mb-3' onClick={() => this.handleAnswered()}>Получить отвеченные</button> \r\n                \r\n                :   <button active className='btn btn-dark mb-3 mr-3' onClick={() => this.handleAnswered()}>Получить неотвеченные</button>}\r\n                {this.state.message.length>0 ? <div className='tlgmsg alert alert-info'>{this.state.message}</div>: <div></div>}\r\n                <h4 className='mb-3 text-center'>Отвеченные вопросы за неделю ({this.props.answered.answered.length})</h4>\r\n               <div className='row'>\r\n                 {this.props.answered.answered.map(elem=>(\r\n                     <div className='col-md-4' >\r\n                         <div className='card mt-2 answeredCard' key={elem.id}>\r\n                            <div className='card-body'>\r\n                            <p className='tinydate'>Задано: {new Intl.DateTimeFormat('ru', { year: 'numeric', month: 'short', day: '2-digit', hour:'numeric', minute:'numeric' }).format(new Date(Date.parse(elem.created_at)))}</p>\r\n                            <p className='tinydate'>Отвечено: {new Intl.DateTimeFormat('ru', { year: 'numeric', month: 'short', day: '2-digit', hour:'numeric', minute:'numeric' }).format(new Date(Date.parse(elem.updated_at)))}</p>\r\n                                <p className='card-text'>\r\n                                    Имя: {elem.name} <br></br>ИИН: {elem.iin}\r\n                                </p>\r\n                                <i>Вопрос: {elem.question}</i>\r\n\r\n                            </div>\r\n                         </div>\r\n                     </div>\r\n                 ))}\r\n                </div>\r\n             </div>\r\n             </section>\r\n             </main>\r\n             <Footer/>\r\n             </>\r\n            )\r\n        }\r\n        else \r\n        return (\r\n            <>\r\n            <Header/>\r\n            <main role=\"main\">\r\n     <section class=\"panel important\">\r\n            <div className='container otherPages'>\r\n                {this.state.answers ?  <button active className='btn btn-dark mb-3' onClick={() => this.handleAnswered()}>Получить отвеченные</button> \r\n                \r\n                :   <button active className='btn btn-dark mb-3 mr-3' onClick={() => this.handleAnswered()}>Получить неотвеченные</button>}\r\n              \r\n               \r\n                {this.state.message.length>0 ? <div className='tlgmsg alert alert-info'>{this.state.message}</div>: <div></div>}\r\n                <h4 className='mb-3 text-center'>Неотвеченные вопросы ({this.props.nonanswered.nonanswered.length})</h4>\r\n             <div className='row'>\r\n                 {this.props.nonanswered.nonanswered.map(elem=>(\r\n                     <div className='col-md-4'>\r\n                         <div className='card mt-2' key={elem.id} onClick={this.toggleCollapse(elem.id)}>\r\n                            <div className='card-body'>\r\n                            <p className='tinydate'>{new Intl.DateTimeFormat('ru', { year: 'numeric', month: 'short', day: '2-digit', hour:'numeric', minute:'numeric' }).format(new Date(Date.parse(elem.created_at)))}</p>\r\n                                <p className='card-text'>\r\n                                    Имя: {elem.name} <br></br>ИИН: {elem.iin}\r\n                                </p>\r\n                                <i>Вопрос: {elem.question}</i>\r\n\r\n                            </div>\r\n                         </div>\r\n                     </div>\r\n                 ))}\r\n                 \r\n             </div>\r\n             <Modal  isOpen={this.state.collapse} toggle={this.toggleCollapse(this.state.collapse)}   size=\"lg\">\r\n                 <ModalBody>\r\n                    <MessageDetail \r\n                        msg={this.props.nonanswered.nonanswered.filter(el => el.id === parseInt(this.state.collapse))[0]} \r\n                        answer = {this.state.answer}\r\n                        handleChange = {this.handleChange}\r\n                        handleSubmit = {this.handleSubmit}\r\n                        handleRecommend={this.handleRecommend}\r\n                        keypress = {this.keypress}\r\n                        loading = {this.state.loading}\r\n                    />\r\n                 </ModalBody>\r\n\t\t\t</Modal>\r\n            </div>\r\n            </section>\r\n            </main>        \r\n            <Footer/>\r\n            </>\r\n        )\r\n    }\r\n    \r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Telegram)"]},"metadata":{},"sourceType":"module"}