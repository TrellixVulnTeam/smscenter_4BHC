{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"E:\\\\icredit\\\\frontend-admin\\\\pages\\\\_app.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport '../styles/globals.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'font-awesome/css/font-awesome.css';\nimport cookie from 'js-cookie';\nimport { Provider } from 'react-redux';\nimport React, { Fragment } from 'react';\nimport { createWrapper } from \"next-redux-wrapper\";\nimport { connect } from 'react-redux';\nimport store from '../store/store';\nimport App from 'next/app';\nimport { fetchAdmin } from '../store/actions/adminActions';\n\nclass MyApp extends App {\n  componentDidMount() {\n    if (cookie.get('admin_token') !== undefined) {\n      this.props.fetchAdmin();\n    }\n  }\n\n  render() {\n    const {\n      Component,\n      pageProps\n    } = this.props;\n    const compName = Component.name;\n    return /*#__PURE__*/_jsxDEV(Provider, {\n      store: store,\n      children: /*#__PURE__*/_jsxDEV(Component, _objectSpread({}, pageProps), void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 11\n    }, this);\n  }\n\n} //makeStore function that returns a new store for every request\n\n\nconst makeStore = () => store;\n\nconst wrapper = createWrapper(makeStore);\n\nconst mapStateToProps = state => ({// loggedIn: state.userReducer.loggedIn\n});\n\nconst mapDispatchToProps = dispatch => ({\n  fetchAdmin: () => dispatch(fetchAdmin())\n});\n\nMyApp = connect(mapStateToProps, mapDispatchToProps)(MyApp); // //withRedux wrapper that passes the store to the App Component\n// // export default makeStore.withRedux(MyApp);\n\nexport default wrapper.withRedux(MyApp); // export default MyApp","map":{"version":3,"sources":["E:/icredit/frontend-admin/pages/_app.js"],"names":["cookie","Provider","React","Fragment","createWrapper","connect","store","App","fetchAdmin","MyApp","componentDidMount","get","undefined","props","render","Component","pageProps","compName","name","makeStore","wrapper","mapStateToProps","state","mapDispatchToProps","dispatch","withRedux"],"mappings":";;;;;;;;;AAAA,OAAO,uBAAP;AACA,OAAO,sCAAP;AACA,OAAO,mCAAP;AACA,OAAOA,MAAP,MAAmB,WAAnB;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,OAAOC,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,SAAQC,aAAR,QAA4B,oBAA5B;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,OAAOC,KAAP,MAAkB,gBAAlB;AACA,OAAOC,GAAP,MAAgB,UAAhB;AACA,SAASC,UAAT,QAA2B,+BAA3B;;AAEA,MAAMC,KAAN,SAAoBF,GAApB,CAAwB;AACtBG,EAAAA,iBAAiB,GAAG;AAClB,QAAGV,MAAM,CAACW,GAAP,CAAW,aAAX,MAA8BC,SAAjC,EAA4C;AAC1C,WAAKC,KAAL,CAAWL,UAAX;AACD;AACF;;AACDM,EAAAA,MAAM,GAAG;AACL,UAAM;AAACC,MAAAA,SAAD;AAAYC,MAAAA;AAAZ,QAAyB,KAAKH,KAApC;AACA,UAAMI,QAAQ,GAAGF,SAAS,CAACG,IAA3B;AACA,wBACI,QAAC,QAAD;AAAU,MAAA,KAAK,EAAEZ,KAAjB;AAAA,6BACE,QAAC,SAAD,oBAAeU,SAAf;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADJ;AAMH;;AAfqB,C,CAkBxB;;;AACA,MAAMG,SAAS,GAAG,MAAMb,KAAxB;;AACA,MAAMc,OAAO,GAAGhB,aAAa,CAACe,SAAD,CAA7B;;AACA,MAAME,eAAe,GAAGC,KAAK,KAAK,CAChC;AADgC,CAAL,CAA7B;;AAIA,MAAMC,kBAAkB,GAAGC,QAAQ,KAAK;AACtChB,EAAAA,UAAU,EAAC,MAAMgB,QAAQ,CAAChB,UAAU,EAAX;AADa,CAAL,CAAnC;;AAIAC,KAAK,GAAGJ,OAAO,CAACgB,eAAD,EAAiBE,kBAAjB,CAAP,CAA4Cd,KAA5C,CAAR,C,CAEA;AACA;;AACA,eAAeW,OAAO,CAACK,SAAR,CAAkBhB,KAAlB,CAAf,C,CAEA","sourcesContent":["import '../styles/globals.css'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'font-awesome/css/font-awesome.css';\nimport cookie from 'js-cookie'\nimport { Provider } from 'react-redux'\nimport React, {Fragment} from 'react'\nimport {createWrapper} from \"next-redux-wrapper\";\nimport {connect} from 'react-redux'\nimport store from '../store/store'\nimport App from 'next/app';\nimport { fetchAdmin } from '../store/actions/adminActions';\n\nclass MyApp extends App {\n  componentDidMount() {\n    if(cookie.get('admin_token') !== undefined) {\n      this.props.fetchAdmin()\n    }\n  }\n  render() {\n      const {Component, pageProps} = this.props;\n      const compName = Component.name\n      return (\n          <Provider store={store}>\n            <Component {...pageProps}/>\n\n          </Provider>\n      );\n  }\n}\n\n//makeStore function that returns a new store for every request\nconst makeStore = () => store;\nconst wrapper = createWrapper(makeStore);\nconst mapStateToProps = state => ({\n  // loggedIn: state.userReducer.loggedIn\n});\n\nconst mapDispatchToProps = dispatch => ({\n  fetchAdmin:() => dispatch(fetchAdmin())\n});\n\nMyApp = connect(mapStateToProps,mapDispatchToProps)(MyApp)\n\n// //withRedux wrapper that passes the store to the App Component\n// // export default makeStore.withRedux(MyApp);\nexport default wrapper.withRedux(MyApp);\n\n// export default MyApp\n"]},"metadata":{},"sourceType":"module"}