{"ast":null,"code":"import { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport Header from '../components/admin/Header';\nimport Footer from '../components/admin/Footer';\nimport React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport SmsPagination from '../components/admin/SmsPagination';\nimport { useRouter } from 'next/router';\nimport cookie from 'js-cookie';\nimport axios from 'axios';\nimport SmsList from '../components/admin/SmsList';\nimport InputMask from \"react-input-mask\";\nimport { phoneCheck } from '../defaults/validations';\nimport { ExportCSV } from '../components/admin/ExportCSV';\n\nfunction mapStateToProps(state) {\n  return {\n    adminReducer: state.adminReducer\n  };\n}\n\nconst AdminSmsCenter = ({\n  adminReducer\n}) => {\n  const router = useRouter();\n  const {\n    0: smsList,\n    1: setSmsList\n  } = useState([]);\n  const {\n    0: smsTypes,\n    1: setSmsTypes\n  } = useState([]);\n  const {\n    0: total,\n    1: setTotal\n  } = useState(null);\n  const {\n    0: lastPage,\n    1: setLastPage\n  } = useState(null);\n  const {\n    0: currentPage,\n    1: setCurrentPage\n  } = useState(1);\n  const {\n    0: toList,\n    1: setToList\n  } = useState(15);\n  const {\n    0: from,\n    1: setFrom\n  } = useState(1);\n  const {\n    0: file,\n    1: setFile\n  } = useState([]);\n  const {\n    0: loading,\n    1: setLoading\n  } = useState(true);\n  const adminCookie = cookie.get('admin_token');\n  const {\n    phone\n  } = router.query;\n  const {\n    start\n  } = router.query;\n  const {\n    end\n  } = router.query;\n  const {\n    page\n  } = router.query;\n  const {\n    sms_type\n  } = router.query;\n  const {\n    0: phoneNumber,\n    1: setPhoneNumber\n  } = useState(phone ? phone : '');\n  const {\n    0: dateFrom,\n    1: setDateFrom\n  } = useState(start ? start : '');\n  const {\n    0: dateTo,\n    1: setDateTo\n  } = useState(end ? end : '');\n  const {\n    0: smsType,\n    1: setSmsType\n  } = useState(sms_type ? sms_type : '');\n\n  const beforeMaskedValueChange = (newState, oldState, userInput) => {\n    var {\n      value\n    } = newState;\n    var selection = newState.selection;\n    var cursorPosition = selection ? selection.start : null; // keep minus if entered by user\n\n    if (value.endsWith('-') && userInput !== '-' && !this.state.value.endsWith('-')) {\n      if (cursorPosition === value.length) {\n        cursorPosition--;\n        selection = {\n          start: cursorPosition,\n          end: cursorPosition\n        };\n      }\n\n      value = value.slice(0, -1);\n    }\n  };\n\n  const onChangePhone = e => {\n    setPhoneNumber(e.target.value);\n  };\n\n  const sendRequest = () => {\n    setLoading(true);\n    axios.get(`${process.env.BASE_URL}/exportSms`, {\n      params: {\n        token: adminCookie,\n        phone: phone,\n        date_from: start,\n        date_to: end,\n        sms_type: sms_type\n      }\n    }).then(res => {\n      setLoading(false);\n      setFile(res.data);\n    });\n  };\n\n  const requestUpdate = res => {\n    setCurrentPage(res.data.current_page);\n    setSmsList(res.data.data);\n    setLastPage(res.data.last_page);\n    setTotal(res.data.total);\n    setToList(res.data.to);\n    setFrom(res.data.from);\n  };\n\n  const clearForm = e => {\n    setFile([]);\n    setDateFrom('');\n    setDateTo('');\n    setPhoneNumber('');\n    setSmsType('');\n    setLoading(true);\n    axios.get(`${process.env.BASE_URL}/smsFilter`, {\n      params: {\n        token: adminCookie,\n        phone: '',\n        page: '',\n        date_from: '',\n        date_to: '',\n        sms_type: '',\n        page: ''\n      }\n    }, {\n      headers: {\n        'Access-Control-Allow-Origin': '*',\n        'Content-Type': 'application/json'\n      }\n    }).then(res => {\n      setLoading(false);\n\n      if (!res.data.message) {\n        requestUpdate(res);\n      }\n    });\n    router.push('/smscenter');\n    e.preventDefault();\n  };\n\n  const onClear = () => {\n    setFile([]);\n    setLoading(true);\n    axios.get(`${process.env.BASE_URL}/smsFilter`, {\n      params: {\n        token: adminCookie,\n        phone: phone,\n        page: page,\n        date_from: start,\n        date_to: end,\n        sms_type: sms_type,\n        page: page\n      }\n    }, {\n      headers: {\n        'Access-Control-Allow-Origin': '*',\n        'Content-Type': 'application/json'\n      }\n    }).then(res => {\n      setLoading(false);\n\n      if (!res.data.message) {\n        requestUpdate(res);\n      }\n    });\n    axios.get(`${process.env.BASE_URL}/smsTypes`, {\n      headers: {\n        'Access-Control-Allow-Origin': '*',\n        'Content-Type': 'application/json'\n      }\n    }).then(res => {\n      setLoading(false);\n      setSmsTypes(res.data);\n    });\n  };\n\n  const changePage = n => {\n    setFile([]);\n\n    function replaceDate(val) {\n      return String(val).replace(/[^A-Z0-9]/g, '');\n    }\n\n    setLoading(true);\n    axios.get(`${process.env.BASE_URL}/smsFilter`, {\n      params: {\n        token: adminCookie,\n        phone: phone,\n        page: page,\n        date_from: start,\n        date_to: end,\n        sms_type: sms_type,\n        page: n\n      }\n    }, {\n      headers: {\n        'Access-Control-Allow-Origin': '*',\n        'Content-Type': 'application/json'\n      }\n    }).then(res => {\n      setLoading(false);\n\n      if (!res.data.message) {\n        requestUpdate(res);\n        router.push(`/smscenter?page=${n}&phone=${replaceDate(phoneNumber)}&start=${dateFrom}&end=${dateTo}&sms_type=${smsType}`);\n      }\n    });\n  };\n\n  const onSearch = e => {\n    setFile([]);\n\n    function replaceDate(val) {\n      return String(val).replace(/[^A-Z0-9]/g, '');\n    }\n\n    if (!phoneCheck(phoneNumber)) {\n      setPhoneNumber('');\n    }\n\n    setLoading(true);\n    axios.get(`${process.env.BASE_URL}/smsFilter`, {\n      params: {\n        token: adminCookie,\n        phone: replaceDate(phoneNumber),\n        date_from: dateFrom,\n        date_to: dateTo,\n        sms_type: smsType\n      }\n    }, {\n      headers: {\n        'Access-Control-Allow-Origin': '*',\n        'Content-Type': 'application/json'\n      }\n    }).then(res => {\n      setLoading(false);\n\n      if (!res.data.message) {\n        requestUpdate(res);\n        router.push(`/smscenter?phone=${replaceDate(phoneNumber)}&start=${dateFrom}&end=${dateTo}&sms_type=${smsType}`);\n      }\n    });\n    e.preventDefault();\n  };\n\n  useEffect(() => {\n    onClear();\n  }, []);\n  return /*#__PURE__*/_jsxs(\"div\", {\n    children: [/*#__PURE__*/_jsx(Header, {}), /*#__PURE__*/_jsx(\"main\", {\n      role: \"main\",\n      children: /*#__PURE__*/_jsxs(\"section\", {\n        class: \"panel important\",\n        children: [/*#__PURE__*/_jsx(\"h2\", {\n          className: \"text-center\",\n          children: \"SmsCenter\"\n        }), /*#__PURE__*/_jsxs(\"form\", {\n          className: \"text-center\",\n          onSubmit: onSearch,\n          children: [/*#__PURE__*/_jsxs(\"div\", {\n            className: \"d-flex justify-content-center\",\n            children: [/*#__PURE__*/_jsxs(\"div\", {\n              className: \"input-groups d-flex flex-column mr-2\",\n              children: [/*#__PURE__*/_jsx(\"label\", {\n                children: \"\\u041D\\u043E\\u043C\\u0435\\u0440 \\u0442\\u0435\\u043B\\u0435\\u0444\\u043E\\u043D\\u0430:\"\n              }), /*#__PURE__*/_jsx(InputMask, {\n                placeholder: \"+7\",\n                mask: \"+7(999)-999-9999\",\n                maskChar: null,\n                value: phoneNumber,\n                onChange: onChangePhone,\n                beforeMaskedValueChange: beforeMaskedValueChange\n              })]\n            }), /*#__PURE__*/_jsxs(\"div\", {\n              className: \"input-groups d-flex flex-column mr-2\",\n              children: [/*#__PURE__*/_jsx(\"label\", {\n                children: \"\\u0414\\u0430\\u0442\\u0430 \\u043E\\u0442:\"\n              }), /*#__PURE__*/_jsx(\"input\", {\n                type: \"date\",\n                value: dateFrom,\n                onChange: e => setDateFrom(e.target.value)\n              })]\n            }), /*#__PURE__*/_jsxs(\"div\", {\n              className: \"input-groups d-flex flex-column mr-2\",\n              children: [/*#__PURE__*/_jsx(\"label\", {\n                children: \"\\u0414\\u0430\\u0442\\u0430 \\u0434\\u043E:\"\n              }), /*#__PURE__*/_jsx(\"input\", {\n                type: \"date\",\n                value: dateTo,\n                onChange: e => setDateTo(e.target.value)\n              })]\n            }), /*#__PURE__*/_jsxs(\"div\", {\n              className: \"input-groups d-flex flex-column mr-2\",\n              children: [/*#__PURE__*/_jsx(\"label\", {\n                children: \"\\u0422\\u0438\\u043F \\u0441\\u043E\\u043E\\u0431\\u0449\\u0435\\u043D\\u0438\\u0439:\"\n              }), /*#__PURE__*/_jsxs(\"select\", {\n                value: smsType,\n                onChange: e => {\n                  setSmsType(e.target.value);\n                },\n                children: [/*#__PURE__*/_jsx(\"option\", {\n                  value: \"\",\n                  children: \"\\u0412\\u0441\\u0435\"\n                }), smsTypes.map(type => /*#__PURE__*/_jsx(\"option\", {\n                  value: type.id,\n                  children: type.name\n                }))]\n              })]\n            })]\n          }), /*#__PURE__*/_jsxs(\"div\", {\n            className: \"text-center\",\n            children: [/*#__PURE__*/_jsx(\"button\", {\n              type: \"submit\",\n              className: \"mr-2 mt-3 btn btn-dark\",\n              children: \"\\u0418\\u0441\\u043A\\u0430\\u0442\\u044C\"\n            }), /*#__PURE__*/_jsx(\"a\", {\n              href: \"/smscenter\",\n              type: \"button\",\n              className: \"mr-2 mt-3 btn btn-light\",\n              onClick: e => {\n                clearForm(e);\n              },\n              children: \"\\u0421\\u0431\\u0440\\u043E\\u0441\\u0438\\u0442\\u044C\"\n            })]\n          })]\n        }), file.length !== 0 ? /*#__PURE__*/_jsx(ExportCSV, {\n          fileName: !phone && !end && !start && !sms_type ? 'allresult' : 'phone: ' + phone + ' date_from: ' + start + ' date_to: ' + end + ' sms_type: ' + sms_type,\n          csvData: file\n        }) : /*#__PURE__*/_jsx(\"button\", {\n          className: \"btn btn-info\",\n          onClick: sendRequest,\n          children: \"\\u0413\\u043E\\u0442\\u043E\\u0432\\u0438\\u0442\\u044C \\u0444\\u0430\\u0439\\u043B \\u0434\\u043B\\u044F \\u0432\\u044B\\u0433\\u0440\\u0443\\u0437\\u043A\\u0438\"\n        }), loading ? 'loading....' : /*#__PURE__*/_jsx(SmsList, {\n          from: from,\n          sms: smsList,\n          total: total,\n          currentPage: currentPage\n        }), /*#__PURE__*/_jsx(SmsPagination, {\n          max_page: lastPage,\n          current_page: currentPage,\n          changePage: changePage\n        })]\n      })\n    }), /*#__PURE__*/_jsx(Footer, {})]\n  });\n};\n\nexport default connect(mapStateToProps)(AdminSmsCenter);","map":null,"metadata":{},"sourceType":"module"}